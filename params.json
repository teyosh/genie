{"name":"Genie","tagline":"","body":"genie\r\n=====\r\n\r\n[![Build Status](https://travis-ci.org/teyosh/genie.png?branch=master)](https://travis-ci.org/teyosh/genie)\r\n\r\nGenie is framework for [Express3.x](http://expressjs.com/) based to [Klass](https://github.com/ded/klass).\r\n\r\nInstallation\r\n=====\r\n### Get the CLI\r\n  $ npm install genie-express -g\r\n\r\nQuick Start\r\n=====\r\n### Create an app\r\n  $ genie create my-app  \r\n  $ cd my-app $$ npm install genie-express  \r\n\r\n### Start your app\r\n  $ node server.js\r\n\r\n# Scaffold\r\n\r\n  $ genie controller [name]  \r\n  $ genie model [name]  \r\n  $ genie service [name]  \r\n  $ genie factory [name]  \r\n\r\nExamples\r\n=====\r\n### Controller\r\n\r\n```js\r\nmodule.exports = function (app, config) {\r\n  var ApplicationController = app.getController(\"Application\", true);\r\n  var IndexController = ApplicationController.extend(function(){\r\n    this.routes = {\r\n      \"index\" : \"/\"\r\n    };\r\n    this.addBeforeAction(\"action\", function(res, req, next){\r\n      var CheckFactory = app.getFactory(\"Check\");\r\n      CheckFactory.start(res, req, next);\r\n    });\r\n    this.addBeforeAction(\"get\", function(res, req, next){\r\n      var CheckFactory = app.getFactory(\"Check\");\r\n      CheckFactory.start(res, req, next);\r\n    });\r\n    this.addBeforeAction(\"get\", function(res, req, next){\r\n      var CheckService = app.getService(\"Check\");\r\n      CheckService.start(res, req, next);\r\n    });\r\n  }).methods({\r\n    getIndex : function(req, res){\r\n      res.render(\"index\", {\r\n        title : \"Hello, Genie\"\r\n      });\r\n    },\r\n  });\r\n  return IndexController;\r\n}\r\n```\r\n\r\n### Model\r\n\r\n```js\r\n'use strict';\r\nmodule.exports = function(app){\r\n  var ApplicationModel = app.getModel('Application', true);\r\n  var CheckModel = ApplicationModel.extend(function(){\r\n    this.app = app;\r\n    this.modelName = \"Check\";\r\n    this.rooms = ['Apple', 'Orange', 'Grape'];\r\n  }).methods({\r\n    getRoom : function(id){\r\n      console.log(this.rooms);\r\n      return this.rooms[id];\r\n    }\r\n  });\r\n  return CheckModel;\r\n};\r\n```\r\n\r\n### Service\r\n\r\n```js\r\n'use strict';\r\nmodule.exports = function(app){\r\n  var ApplicationService = app.getService('Application', true);\r\n  var CheckService = ApplicationService.extend(function(app){\r\n    this.app = app;\r\n    this.serviceName = \"Check\";\r\n    this.config = this.Config();\r\n    this.num = this.config.num;\r\n  }).methods({\r\n    start : function(req, res, next){\r\n      this.supr();\r\n      console.log(\"service: \"+ this.num++);\r\n      next();\r\n    }\r\n  });\r\n  return CheckService;\r\n};\r\n```\r\n\r\n### Factory\r\n\r\n```js\r\n'use strict';\r\nmodule.exports = function(app){\r\n  var ApplicationFactory = app.getFactory('Application', true);\r\n  var CheckFactory = ApplicationFactory.extend(function(){\r\n    this.factoryName = \"Check\";\r\n    this.num = 0;\r\n  }).methods({\r\n    start : function(req, res, next){\r\n      this.supr();\r\n      console.log(\"factory: \"+ this.num++);\r\n      next();\r\n    }\r\n  });\r\n  return CheckFactory;\r\n};\r\n```\r\n\r\n### View\r\n\r\nUses [Twig](https://github.com/justjohn/twig.js) to render Template\r\n\r\n```html\r\n<div id=\"title\">{% block content %}{% endblock %}</div>\r\n```\r\n\r\n``` html\r\n{% extends \"layout.twig\" %}\r\n{% block content %}\r\n{{ title }}\r\n{% endblock %}\r\n```\r\n\r\n### Routing\r\n\r\nRoutings are extract from method of controller.  \r\nExtract methods are GET, POST, PUT and DELETE.  \r\n\r\n#### get /index\r\n\r\n```js\r\ngetIndex : function(req, res){\r\n  res.render(\"index\", {\r\n    title : \"Get index\"\r\n  });\r\n}\r\n```\r\n\r\n#### post /create\r\n```js\r\npostCreate : function(req, res){\r\n  res.render(\"index\", {\r\n    title : \"Post create\"\r\n  });\r\n}\r\n```\r\n\r\nParams are extract from property of controller.\r\n\r\n#### get /test/member/:id\r\n\r\n```js\r\n// controllers/test/TestController.js\r\n\r\nmodule.exports = function (app, config) {\r\n  var ApplicationController = app.getController(\"Application\", true);\r\n  var TestController = ApplicationController.extend(function(){\r\n    this.params = {\r\n      \"member\" : [\":id\"]\r\n    };\r\n  }).methods({\r\n    getMember : function(req, res){\r\n      res.render(\"index\", {\r\n        title : \"Genie is \"+req.params.id\r\n      });\r\n    },\r\n  });\r\n  return TestController;\r\n}\r\n\r\n```\r\n\r\nIn the case of a different method?\r\n\r\n```js\r\nthis.params = {\r\n  \"member\" : {\r\n    get : [\":id\"],\r\n    post: [\":test\"]\r\n  }\r\n};\r\n\r\n```\r\n\r\nRoutes change extract from property of controller.\r\n\r\n### get /test/\r\n\r\n```js\r\n// controllers/test/TestController.js\r\n\r\nmodule.exports = function (app, config) {\r\n  var ApplicationController = app.getController(\"Application\", true);\r\n  var TestController = ApplicationController.extend(function(){\r\n    this.routes = {\r\n      \"index\": \"/test/\"\r\n    };\r\n  }).methods({\r\n    getIndex : function(req, res){\r\n      res.render(\"index\", {\r\n        title : \"Genie is test\"\r\n      });\r\n    },\r\n  });\r\n  return TestController;\r\n}\r\n\r\n```\r\n### Service and Factory\r\n\r\nService will create an instance for each call.\r\n\r\n```js\r\nmodule.exports = function (app, config) {\r\n  var ApplicationController = app.getController(\"Application\", true);\r\n  var TestController = ApplicationController.extend(function(){\r\n    this.TestService = this.app.getService(\"Test\");\r\n  })\r\n}\r\n```\r\n\r\nFactory will call the same instance.\r\n\r\n```js\r\nmodule.exports = function (app, config) {\r\n  var ApplicationController = app.getController(\"Application\", true);\r\n  var TestController = ApplicationController.extend(function(){\r\n    this.TestFactory = this.app.getFactory(\"Test\");\r\n  })\r\n}\r\n```\r\n","google":"UA-49613565-1","note":"Don't delete this file! It's used internally to help with page regeneration."}